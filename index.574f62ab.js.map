{"mappings":"AAAA,IAAIA,KACAC,YAAa,EACbC,aAAaC,QAAQ,UAAUD,aAAaE,QAAQ,QAAS,SACjE,IAAIC,KAAO,EAIXC,SAASC,iBAAiB,oBAAoBC,iBAC1C,IAAIC,EACAC,EAGJJ,SAASK,eAAe,gBAAgBC,MAAQV,aAAaC,QAAQ,SAGrEG,SAASK,eAAe,gBAAgBJ,iBAAiB,UAAU,SAASM,GAExE,IAAIC,EAAWD,EAAEE,OAAOH,MAExBV,aAAaE,QAAQ,QAASU,MAIlCR,SAASK,eAAe,QAAQJ,iBAAiB,UAAU,SAASM,GAEhE,IAAIG,EAAaH,EAAEE,OAAOE,WAAaJ,EAAEE,OAAOG,aAAeL,EAAEE,OAAOI,cAIpET,EAFDM,EAAaP,EAEA,OAGA,KAGhBA,EAAgBI,EAAEE,OAAOE,WAAaJ,EAAEE,OAAOG,aAAeL,EAAEE,OAAOI,cAIvEC,QAAQC,IAAIX,GACTM,EAAa,KAAQf,YAA2B,QAAbS,IAClCL,OACAiB,gBAMHC,OAAOC,WACRJ,QAAQC,IAAI,4GAIFE,OAAOC,UAAUC,KAAK,OAAQ,GAEpCC,QAAU,SAASC,GACvBP,QAAQC,IAAI,UAAW,wEAKrBC,YAGNhB,SAASsB,uBAAuB,WAAW,GAAGC,MAAMC,QAAU,IAC9DxB,SAASsB,uBAAuB,WAAW,GAAGC,MAAME,cAAgB,UAUxER,OAAOS,KAAO,SAASC,EAAQC,GAC3B,OAAGD,EAAOE,OAASD,EACRD,EAAOG,UAAU,EAAGF,GAAQ,MAEhCD,GAGXV,OAAOc,aAAe,WAElB,IAAIC,EAAQC,OAAO,gDAAkDrC,aAAaC,QAAQ,SAAW,KACzF,MAATmC,IAIAA,EAAME,MAAK,WAKdtC,aAAaE,QAAQ,QAASkC,GAE9BG,SAASC,YAGbnB,OAAOD,UAAYd,iBACfP,YAAa,QACP0C,MAAM,iFAAiFC,mBAAmB1C,aAAaC,QAAQ,SAAS0C,0CAA0CxC,OAAQ,CAC5LyC,OAAQ,MACRC,QAAS,CACL,YAAa,iDAElBC,MAAK,SAASC,GACb,OAAOA,EAASC,UACjBF,MAAK,SAASG,GAEbnD,KAAOmD,EAAKC,SACZhC,QAAQC,IAAIrB,MACZ,IAAIqD,EAAS,GAEb,IAAI,IAAIC,EAAI,EAAGA,EAAItD,KAAKmC,OAAQmB,IAAK,CAEjC,GAAGtD,KAAKuD,SAASvD,KAAKsD,GAAGE,OACrB,OAEJH,EAAOI,KAAKzD,KAAKsD,GAAGE,OAGpB,IAAIE,EAAU,6DAa+B1D,KAAAsD,GAAOK,iCAC1C3D,KAAGsD,GAAKM,MAAC,sDAAA5D,KAAAsD,GAAAM,iBAAA,uGAEzB5B,KAAAhC,KAAAsD,GAAAE,MAAA,yJAI4BxD,KAAAsD,GAAAO,wDAAA7D,KAAAsD,GAAAQ,OAAA9D,KAAAsD,GAAAQ,OAAA9D,KAAAsD,GAAAO,uCAAA7D,KAAAsD,GAAAS,sHACoBzD,SAAAK,eAAA,QAAAqD,WAAAN,EAC/CzD,YAAa,yBAID,SAAQgE,GAYvB,GAVI,CACA,OACA,SACA,YAOOV,SAAAU,GAAA,CAEM3D,SAAA4D,cAAuB,wBAa/BC,QAAQC,OAAA,QAWP9D,SAAAK,eAAAsD,GAGOE,QAAAC,QAAA,eAUP/C,IAAA,UAAA,0BACT4C,GACJ,IAAA","sources":["script.js"],"sourcesContent":["let news;\r\nlet isFetching = false;\r\nif(!localStorage.getItem(\"topic\")) localStorage.setItem(\"topic\", \"world\");\r\nlet page = 1;\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', async function() {\r\n    let oldScrollPerc;\r\n    let direction;\r\n\r\n    // get the localStorage topic and set #topic-select to it\r\n    document.getElementById(\"topic-select\").value = localStorage.getItem(\"topic\");\r\n\r\n\r\n    document.getElementById(\"topic-select\").addEventListener(\"change\", function(e){\r\n        // get the selected item\r\n        let selected = e.target.value;\r\n        // save the selected item in localStorage\r\n        localStorage.setItem(\"topic\", selected);\r\n    })\r\n\r\n\r\n    document.getElementById(\"main\").addEventListener('scroll', function(e){\r\n        // get the direction of the scroll\r\n        let scrollPerc = e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight) \r\n        // check if it's greater than the old scroll position\r\n        if(scrollPerc > oldScrollPerc){\r\n            // then the user is scrolling down\r\n            direction = \"down\";\r\n        } else {\r\n            // otherwise the user is scrolling up\r\n            direction = \"up\";\r\n        }\r\n\r\n        oldScrollPerc = e.target.scrollTop / (e.target.scrollHeight - e.target.clientHeight)\r\n\r\n\r\n        \r\n        console.log(direction);\r\n        if(scrollPerc > 0.9 && !isFetching && direction == \"down\"){\r\n            page++;\r\n            fetchNews();\r\n        }\r\n    })\r\n\r\n\r\n    // check if indexedDB is supported\r\n    if (!window.indexedDB) {\r\n        console.log(\"Your browser doesn't support a stable version of IndexedDB. Such and such feature will not be available.\");\r\n    }\r\n\r\n    // check if there's any news cached in indexedDB\r\n    var request = window.indexedDB.open(\"news\", 1);\r\n\r\n    request.onerror = function(event) {\r\n        console.log(\"[Error]\", \"Something went wrong while trying to open the local database.\");\r\n    }\r\n    \r\n\r\n    // fetch the latest news from newscatcherapi\r\n    await fetchNews();  \r\n\r\n\r\n    document.getElementsByClassName(\"loading\")[0].style.opacity = \"0\";\r\n    document.getElementsByClassName(\"loading\")[0].style.pointerEvents = \"none\";\r\n\r\n\r\n\r\n \r\n})\r\n\r\n\r\n\r\n\r\nwindow.trim = function(string, size){\r\n    if(string.length > size){\r\n        return string.substring(0, size) + \"...\";\r\n    }\r\n    return string;\r\n}\r\n\r\nwindow.requestTopic = function(){\r\n    // alert with field\r\n    let input = prompt(\"Enter a topic to search for\\n(Current topic: \" + localStorage.getItem(\"topic\") + \")\");\r\n    if(input == null){\r\n        return;\r\n    }\r\n    // check if the input is empty with regex\r\n    if(input.match(/^\\s*$/)){\r\n        return;\r\n    }\r\n\r\n    // save the input in localStorage\r\n    localStorage.setItem(\"topic\", input);\r\n    // reload the page\r\n    location.reload();\r\n}\r\n\r\nwindow.fetchNews = async function(){\r\n    isFetching = true\r\n    await fetch(`https://api.newscatcherapi.com/v2/latest_headlines?countries=US&lang=en&topic=${encodeURIComponent(localStorage.getItem(\"topic\").toLocaleLowerCase())}&page_size=10&page=${page}`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'x-api-key': 'rKHk3vIV2Q8JyRKA373DdbpLJ5RlnQRxBND6cQxqKV8'\r\n        }\r\n    }).then(function(response) {\r\n        return response.json();\r\n    }).then(function(data) {\r\n        // save the fetched json in a variable\r\n        news = data.articles;\r\n        console.log(news);\r\n        let titles = [];\r\n\r\n        for(let i = 0; i < news.length; i++) {\r\n            // create a new article element\r\n            if(news.includes(news[i].title)){\r\n                return\r\n            }\r\n            titles.push(news[i].title);\r\n\r\n            \r\n            let article = `\r\n                <div class=\"item\" onclick=\"window.open('${news[i].link}')\">\r\n                    ${news[i].media ? `<div class=\"item-img\" style=\"background-image: url(${news[i].media})\"></div>` : ``}\r\n                    <div class=\"item-content\">\r\n                        <div class=\"item-title\">${trim(news[i].title, 100)}</div>\r\n                        <div class=\"item-data\">\r\n                            <span id=\"author\"><img src=\"https://icons.duckduckgo.com/ip3/${news[i].clean_url}.ico\" class=\"author-ico\" alt=\"author icon\"> ${news[i].author ? news[i].author : news[i].clean_url}</span><br><span id=\"date\">${news[i].published_date}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        `\r\n\r\n        \r\n            document.getElementById(\"main\").innerHTML += article\r\n            isFetching = false;\r\n        }\r\n    })\r\n}\r\n\r\n\r\nwindow.switchPage = function(page){\r\n    let allowedPages = [\"main\", \"search\", \"settings\"];\r\n    if(allowedPages.includes(page)){\r\n        // get the page with the dataset-active true\r\n        let activePage = document.querySelector(`[data-active=\"true\"]`);\r\n        // set the dataset-active false to the active page\r\n        activePage.dataset.active = \"false\";\r\n\r\n        // get the page with the id of page\r\n        let pageToSwitchTo = document.getElementById(page);\r\n        // set the dataset-active to true\r\n        pageToSwitchTo.dataset.active = true;\r\n    } else {\r\n        console.log(\"[Error]\", \"Page not found.\");\r\n    }\r\n\r\n\r\n\r\n    switch(page){\r\n        case \"main\":\r\n            document.getElementsByClassName(\"navbar\")[0].innerHTML = `\r\n            <div class=\"nav-left\">\r\n            <div class=\"nav-title\">\r\n                BoopNews\r\n            </div>\r\n            </div>\r\n            <div class=\"nav-right\">\r\n                <!-- <div class=\"nav-item material-symbols-outlined\" id=\"nav-add\" onclick=\"\">add</div> -->\r\n                <div class=\"nav-item material-symbols-outlined\" id=\"nav-settings\" onclick=\"switchPage('settings')\">settings</div>\r\n            </div>\r\n        `\r\n        break;\r\n\r\n        case \"search\":\r\n            document.getElementsByClassName(\"navbar\")[0].innerHTML = `\r\n            <div class=\"nav-left\">\r\n            <div class=\"nav-back material-symbols-outlined\" onclick=\"switchPage(\"main\")\">arrow_back</div>\r\n            <div class=\"nav-title\">\r\n                Search\r\n            </div>\r\n            </div>\r\n            <div class=\"nav-right\">\r\n            </div>\r\n        `\r\n        break;\r\n\r\n        case \"settings\":\r\n            document.getElementsByClassName(\"navbar\")[0].innerHTML = `\r\n            <div class=\"nav-left\">\r\n            <div class=\"nav-back material-symbols-outlined\" onclick=\"location.reload()\">arrow_back</div>\r\n            <div class=\"nav-title\">\r\n                Settings\r\n            </div>\r\n            </div>\r\n            <div class=\"nav-right\">\r\n            </div>\r\n        `\r\n        break;\r\n    }\r\n}\r\n\r\n\r\n"],"names":["news","isFetching","localStorage","getItem","setItem","page","document","addEventListener","async","oldScrollPerc","direction","getElementById","value","e","selected","target","scrollPerc","scrollTop","scrollHeight","clientHeight","console","log","fetchNews","window","indexedDB","open","onerror","event","getElementsByClassName","style","opacity","pointerEvents","trim","string","size","length","substring","requestTopic","input","prompt","match","location","reload","fetch","encodeURIComponent","toLocaleLowerCase","method","headers","then","response","json","data","articles","titles","i","includes","title","push","article","link","media","clean_url","author","published_date","innerHTML","page1","querySelector","dataset","active"],"version":3,"file":"index.574f62ab.js.map"}